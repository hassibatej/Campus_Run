cmake_minimum_required(VERSION 3.5)

project(Cat VERSION 0.1 LANGUAGES CXX)

set(CMAKE_INCLUDE_CURRENT_DIR ON)

set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(QT NAMES Qt6 Qt5 COMPONENTS Widgets REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets REQUIRED)

set(PROJECT_SOURCES
        main.cpp
        mainwindow.cpp
        mainwindow.h
        mainwindow.ui
        Game.cpp
        game.h
        Player.h
        Player.cpp
        item.h
        item.cpp
        Tile.h
        Tile.cpp
        TileMap.h
        TileMap.cpp
        stdfx.h
        stdfx.cpp
        obstacles.h
        obstacles.cpp
        floor.h
        floor.cpp
        HealthBar.cpp
        HealthBar.h
        )

    set(SFML_INCLUDE_DIR "./include")
    set(SFML_LIBRARY_DIR "./lib/SFML")

    link_directories(SFML_LIBRARY_DIR)
    include_directories(SFML_INCLUDE_DIR)

    find_package(SFML 2.5.1 COMPONENTS system window graphics network audio)

    if(SFML_FOUND)
        message(STATUS "SFML_INCLUDE_DIR: ${SFML_INCLUDE_DIR}")
        message(STATUS "SFML_LIBRARIES: ${SFML_LIBRARIES}")
        message(STATUS "SFML_VERSION: ${SFML_VERSION}")
    endif()

    if(${QT_VERSION_MAJOR} GREATER_EQUAL 6)
        qt_add_executable(Cat
            MANUAL_FINALIZATION
            ${PROJECT_SOURCES}
        )
    # Define target properties for Android with Qt 6 as:
    #    set_property(TARGET Cat APPEND PROPERTY QT_ANDROID_PACKAGE_SOURCE_DIR
    #                 ${CMAKE_CURRENT_SOURCE_DIR}/android)
    # For more information, see https://doc.qt.io/qt-6/qt-add-executable.html#target-creation
    else()
        if(ANDROID)
            add_library(Cat SHARED
                ${PROJECT_SOURCES}
            )
    # Define properties for Android with Qt 5 after find_package() calls as:
    #    set(ANDROID_PACKAGE_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/android")
        else()
            add_executable(Cat
                ${PROJECT_SOURCES}
            )
        endif()
    endif()

    target_link_libraries(Cat PRIVATE Qt${QT_VERSION_MAJOR}::Widgets sfml-graphics sfml-window sfml-system sfml-audio)

    set_target_properties(Cat PROPERTIES
        MACOSX_BUNDLE_GUI_IDENTIFIER my.example.com
        MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
        MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    )

    if(QT_VERSION_MAJOR EQUAL 6)
        qt_finalize_executable(Cat)
    endif()
